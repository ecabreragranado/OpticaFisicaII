{"kernelspec":{"display_name":"Python 2 (SageMath)","language":"python","name":"python2"},"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.10"},"name":"Anillos_de_Newton.ipynb"}
{"cell_type":"code","execution_count":1,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"Populating the interactive namespace from numpy and matplotlib\n"}],"source":"%pylab inline\nf = imread(\"IMG_20141121_122547.jpg\")"}
{"cell_type":"code","execution_count":2,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"<matplotlib.image.AxesImage at 0x7f4943ac4050>"},"execution_count":2,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"smc-blob::48dc44aa-586d-48ea-9b4b-dd81f9846c59","text/plain":"<matplotlib.figure.Figure at 0x7f494394f2d0>"},"metadata":{},"output_type":"display_data"}],"source":"imshow(f)"}
{"cell_type":"code","execution_count":14,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"1"},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":"f[0,0,0]"}
{"cell_type":"code","execution_count":4,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"<matplotlib.colorbar.Colorbar at 0x7f4941481650>"},"execution_count":4,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"smc-blob::a9032407-7f0e-4577-be06-23a2c7dca4c0","text/plain":"<matplotlib.figure.Figure at 0x7f494161b550>"},"metadata":{},"output_type":"display_data"}],"source":"#f2=double(f)\nf2=f[0:2000,0:3000,2]\nimshow(f2,cmap='gray');colorbar()"}
{"cell_type":"code","execution_count":18,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"<matplotlib.colorbar.Colorbar at 0x7f29993d67d0>"},"execution_count":18,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"smc-blob::014dabeb-cac7-4eeb-9b66-d3bbc8075cec","text/plain":"<matplotlib.figure.Figure at 0x7f29995fab10>"},"metadata":{},"output_type":"display_data"}],"source":"imshow(Mred);colorbar()"}
{"cell_type":"markdown","metadata":{},"source":"### <div class='alert'> Tarea 3. Análisis de los datos. Ajuste lineal de los radios de los anillos oscuros </div>"}
{"cell_type":"markdown","metadata":{},"source":"Empleando los radios de los anillos oscuros obtenidos en la **Tarea 2** vamos a representar gráficamente el radio al cuadrado en función del número del anillo oscuro. Dicha representación debería darnos una dependencia lineal cuya pendiente es el radio de curvatura multiplicado por la longitud de onda de la luz empleada en el experimento, es decir, \n\npendiente =  $\\lambda$  R \n\nComo hemos empleando luz blanca para realizar el experimento vamos a emplear una longitud de onda central del visible: $\\lambda$=550 nm.\n\nEn la siguiente celda de código se representan los datos y se realiza el ajuste lineal para obtener el valor de la pendiente (aparece escrito en la figura). Dicho valor tendrá las unidades de los radios al cuadrado, es decir, si los radios de los anillos se introducen en mm, entonces la pendiente tendrá dimensiones de mm$^2$."}
{"cell_type":"code","execution_count":2,"metadata":{"collapsed":false,"trusted":false},"outputs":[{"name":"stdout","output_type":"stream","text":"Populating the interactive namespace from numpy and matplotlib\n"},{"data":{"image/png":"smc-blob::d719c80d-e3f4-4d79-978f-3910c2f4c546","text/plain":"<matplotlib.figure.Figure at 0x7f3f18110d90>"},"metadata":{},"output_type":"display_data"}],"source":"# MODIFICAR LOS VALORES DE LOS RADIOS DE LOS ANILLOS. LUEGO EJECUTAR\n###########################################################################\n%pylab inline\n\nradio= array([ 5.1389, 7.0833, 8.75 ]) # Incluir los radios de los anillos oscuros en mm y separados por comas\n\n# DESDE AQUÍ NO TOCAR \n##############################################################################################################################\nm=linspace(1,size(radio),size(radio)) # Vector con los números de los anillos\nradio2=radio*radio # Vector con los radios de los anillos al cuadrado\na,b = polyfit(m,radio2,1) # Ajuste de los datos a una recta donde a es la pendiente y b la ordenada en el origen\n\nplot(m,radio2,'o',m,a*m+b,'-') \nxlabel('Numero del anillo');ylabel('Radio$^2$ (mm$^2$)') # Escribimos los nombres de los ejes\nte = \"pendiente = %f mm$^2$\" % a;title(te); # Se muestra el valor de la pendiente;"}
{"cell_type":"markdown","metadata":{},"source":"Empleando el valor de la pendiente y la longitud de onda calcular el radio de curvatura de la lente \n\n* $R$=  (*incluir las unidades*)"}